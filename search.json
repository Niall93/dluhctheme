[{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"credit-to-bbc-data-team","dir":"Articles","previous_headings":"","what":"Credit to BBC data team","title":"dluhctheme","text":"cookbook copied much better BBC rcookbook, reapplied work creating graphics DLUHC style. Credit must go BBC data team fantastic product team DLUHC essentially copied use.","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"how-to-create-dluhc-style-graphics","dir":"Articles","previous_headings":"","what":"How to create DLUHC style graphics","title":"dluhctheme","text":"developed R package R cookbook make process creating publication-ready graphics -house style using R’s ggplot2 library reproducible process, well making easier people new R create graphics. cookbook hopefully help anyone wants make graphs maps quickly consistent DLUHC style ’ll get can put together various elements graphics, let’s get admin way first…","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"load-all-the-libraries-you-need","dir":"Articles","previous_headings":"How to create DLUHC style graphics","what":"Load all the libraries you need","title":"dluhctheme","text":"steps cookbook - create charts R general - require certain packages installed loaded. install load one one, can use p_load function pacman package load following code.","code":"#This line of code installs the pacman page if you do not have it installed - if you do, it simply loads the package if(!require(pacman))install.packages(\"pacman\") #> Loading required package: pacman  pacman::p_load('dplyr', 'tidyr', 'gapminder',                'ggplot2',  'ggalt', 'cowplot', 'sf',                'forcats', 'R.utils', 'png',                 'grid', 'ggpubr', 'scales',                'dluhctheme', 'knitr')"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"install-the-dluhctheme-package","dir":"Articles","previous_headings":"How to create DLUHC style graphics","what":"Install the dluhctheme package","title":"dluhctheme","text":"dluhctheme CRAN, install directly Github using devtools. devtools package installed, run first line code well. info dluhctheme check package’s Github repo, details use package functions detailed . downloaded package successfully installed good go create charts.","code":"# install.packages('devtools') devtools::install_github('communitiesuk/dluhctheme')"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"how-does-the-dluctheme-package-work","dir":"Articles","previous_headings":"How to create DLUHC style graphics","what":"How does the dluctheme package work?","title":"dluhctheme","text":"package two types functions; Generic functions: dluhc_style() finalise_plot() functions designed generic themes can added ggplot2 object. edit axes gridlines define text style, set colour lines fill graphs. Specific functions: functions used quick tool instantly creating particular type formatted graph based set shape data inputted. less adaptable, allow user create graph one line code: one_line_timeseries(), two_line_timeseries(), facet_highlight_timeseries(), LA_map(), facet_barchart(), forecast_timeseries() functions allow create data visualisation set theme instantly fixed formatting. Examples functions can found later document","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"style-function","dir":"Articles","previous_headings":"How to create DLUHC style graphics","what":"Style function","title":"dluhctheme","text":"dluhc_style():added ggplot ‘chain’ created plot one argument text size. generally makes text size, font colour, axis lines, axis text, margins many standard chart components DLUHC style, mainly copied BBC data team slight tweaks based best practise suggestions Analysis Function ONS. Note colours lines case line chart bars bar chart, come box dluhc_style() function, need explicitly set standard ggplot chart functions. code shows dluhc_style() used within standard chart-production workflow. example simple line chart, using data contained within dluhctheme package.  single line can added end script, like , make graph, line colours generic dluhc style adding dluhc style, grap change look like  dluhc_style () function actually bonnet. essentially modifies certain arguments theme function ggplot2. example, first argument setting font, size, typeface colour title element plot. can modify settings chart, add additional theme arguments, calling theme function arguments want - please note work must call called dluhc_style function. Otherwise dluhc_style() override . add gridlines, adding extra theme arguments included dluhc_style() function. many similar examples throughout cookbook.","code":"#Data for chart from 2021 Social Housing Sales statistical release is contained within the dluhctheme package  knitr::kable(head(Social_Housing_Sales)) #The date column is not in the proper R format, so needs to be converted using the function below line_df <- Social_Housing_Sales %>%   mutate(date = as.Date(year,tryFormats = \"%d/%m/%Y\"))  #Make plot linegraph <- ggplot(line_df, aes(x = date, y = count)) +   geom_line(aes(colour = type),size = 1) styled_line <- linegraph + dluhc_style() #> function (size = 2)  #> { #>     ggplot2::theme(plot.title = ggplot2::element_text(size = size *  #>         11, face = \"bold\"), plot.subtitle = ggplot2::element_text(size = size *  #>         9), plot.caption = ggplot2::element_blank(), legend.position = \"top\",  #>         legend.text.align = 0, legend.background = ggplot2::element_blank(),  #>         legend.title = ggplot2::element_blank(), legend.key = ggplot2::element_blank(),  #>         legend.text = ggplot2::element_text(size = size * 9,  #>             color = \"#222222\"), axis.title = ggplot2::element_blank(),  #>         axis.text = ggplot2::element_text(size = size * 9, color = \"#222222\"),  #>         axis.text.x = ggplot2::element_text(margin = ggplot2::margin(5,  #>             b = 10)), axis.ticks = ggplot2::element_line(color = \"#cbcbcb\"),  #>         axis.line = ggplot2::element_blank(), panel.grid.minor = ggplot2::element_blank(),  #>         panel.grid.major.y = ggplot2::element_line(color = \"#cbcbcb\"),  #>         panel.grid.major.x = ggplot2::element_blank(), panel.background = ggplot2::element_blank(),  #>         strip.background = ggplot2::element_rect(fill = \"white\"),  #>         strip.text = ggplot2::element_text(size = size * 11,  #>             hjust = 0)) #> } #> <bytecode: 0x55fec2c38170> #> <environment: namespace:dluhctheme> theme(panel.grid.major.x = element_line(color=\"#cbcbcb\"),          panel.grid.major.y=element_blank())"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"save-out-your-finished-chart","dir":"Articles","previous_headings":"How to create DLUHC style graphics","what":"Save out your finished chart","title":"dluhctheme","text":"adding dluhc_style() chart one step get plot ready publication. finalise_plot(), second function dluhctheme package, left-align title, subtitle add footer source image bottom right corner plot. also save specified location. function five arguments: function arguments: finalise_plot(plot_name, source, save_filepath, width_pixels = 640, height_pixels = 450, logo_image_path) plot_name: variable name called plot, example chart example plot_name \"styled_line\" source: source text want appear bottom left corner plot. need type word \"Source:\" , example source = \"Source: ONS\" right way . save_filepath: precise filepath want graphic save , including .png extension end. depend working directory specific R project. example filepath : Desktop/R_projects/charts/line_chart.png. width_pixels: set 640px default, call argument want chart different width, specify want . height_pixels: set 450px default, call argument want chart different height, specify want . logo_image_path: argument specifies path image/logo bottom right corner plot. default placeholder PNG file background matches background colour plot, specify argument want appear without logo. want add logo, just specify path PNG file. package prepared wide thin image mind. Example finalise_plot() used standard workflow. function called created finalised chart data, titles added dluhc_style() : created plot relatively happy , can use finalise_plot() function make final adjustments save chart can look outside RStudio. important mention good idea early position text elements render accurately RStudio Plots panel depends size aspect ratio want plot appear, saving opening files give accurate representation graphic looks. working graphs go onto gov.uk page, need svg files pixels 640 x 640. finalise_plot() function just save chart, also left-aligns title subtitle, adds footer logo right side lets input source text left side. can save example plot created ?","code":"finalise_plot(plot_name = my_line_plot,               source = \"Source: Example source\",               save_filepath = \"filename_that_my_plot_should_be_saved_to.png\",               width_pixels = 640,               height_pixels = 450,               logo_image_path = \"placeholder.png\") finalise_plot(plot_name = styled_line,               source = \" Source: Social Housing Sales 2021, DLUHC \",               save_filepath = \"images/line_plot_finalised_test.png\",               width_pixels = 640,               height_pixels = 550)"},{"path":[]},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"single-line-chart","dir":"Articles","previous_headings":"Make a line chart","what":"Single line chart","title":"dluhctheme","text":"data going use examples Social_Housing_Sales dataset contained within dluhctheme package. dataset two types sale, Right Buy Shared Ownership, year format “31/03/2021”, R referred \"%d/%m/%Y\". see date formats, see section end document.","code":"#Prepare data, select only Right to Buy sales and clean the date column RTB_Sales <- Social_Housing_Sales %>%    filter(type==\"Right to Buy\") %>%    mutate(date = as.Date(year,tryFormats = \"%d/%m/%Y\"))   #Make plot, a line graph with the union blue colour (#012169) line <- ggplot(RTB_Sales, aes(x = date, y = count)) +   geom_line(colour = \"#012169\", linewidth = 1) +   dluhc_style()"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"dluhctheme-function","dir":"Articles","previous_headings":"Make a line chart","what":"dluhctheme function","title":"dluhctheme","text":"want create graph one line, plotting variable time, consistent DLUHC style, can use one_line_timeseries() function within dluhctheme package. function negates need writing ggplot code instantly takes data dataframe puts graph. .data name dataframe using. must contain least value column (numeric) date column (format can define) datecol name column dataframe contains date variable. need give column name quotations marks ycol name column dataframe contains numeric variables. column numeric, function return error message dateformat format date written . default “%Y-%m-%d”, date written format “2021-02-25”. date format 25/02/2021, write “%d/%m/%Y” variable. details date format, see table bottom document  can add changes don’t like , placement y axis, using scale_y_continuous function","code":"RtB_graph <- one_line_timeseries(.data = RTB_Sales,                     ycol = count,                      datecol = year,                      dateformat = \"%d/%m/%Y\") RtB_graph +   scale_y_continuous(limits = c(0,20000))"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"multiple-line-chart","dir":"Articles","previous_headings":"Make a line chart","what":"Multiple line chart","title":"dluhctheme","text":"suggested line graphs multiple lines, try limit number lines single graph make reading data easier. Guidance ONS suggests 5 lines single graph. example plots 2 lines chart  scale_color_manual function sets two colours lines. can seen text can use hex-code (#012169 hex code DLUHC union blue) well words (“orange”) saved function colours. “DLUHC colours” multi-line time series contained within function dluhctheme package: multi_line_timeseries","code":"#See what the data looks like two_line_df <- Social_Housing_Sales %>%   mutate(date = as.Date(year,tryFormats = \"%d/%m/%Y\"))  #Make plot multiple_line <- ggplot(two_line_df, aes(x = date, y = count, colour = type)) +   geom_line(linewidth = 1) +   scale_colour_manual(values = c(\"#012169\", \"orange\")) +   dluhc_style()"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"dluhctheme-function-1","dir":"Articles","previous_headings":"Make a line chart","what":"dluhctheme function","title":"dluhctheme","text":"function works identically one_line_timeseries function addition groupcol variable variable denote data split. use function, data must format Social_Housing_Sales data-set, one column date, one numeric value one category variable. function sets five different colours line chart. want use 5 colours, suggested break graphs separate facets use function like one :","code":"kable(head(dluhctheme::Net_Additions_Regional)) multi_line_df <- dluhctheme::Net_Additions_Regional %>%   filter(Region %in% c(\"North East\",\"North West\",\"East Midlands\",\"South East\"))  multi_line_timeseries(.data = multi_line_df,                       datecol = Year,                        ycol = Net_Additions,                        groupcol = Region,                        dateformat = \"%d/%m/%Y\")"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"using-facets","dir":"Articles","previous_headings":"Make a line chart","what":"Using facets","title":"dluhctheme","text":"Faceting method used separate categorical variables plot multiple separate graphs. data contained within Net_Additions_Regional dataset creates one time series nine regions England. shows plotted one graph: plot graph, date column needs cleaned:  can see, graph messy difficult follow region individually easily. One option facet graphs region, using facet_wrap function:  dluhc_style function size variable useful set 1 faceted time series, looks quite busy text size set otherwise normal time series. facet_wrap function made 2 parts, first separate variables graph going used break data (~Region), second (scales=) denotes whether plotted axis scale (scales = “fixed”) free axis (scales = “free”). benefits graphs either : fixed allows compare regions one another easily can hide changes regions low absolute value, free scales allows see rate change region, show compared one another easily.","code":"knitr::kable(head(Net_Additions_Regional)) Cleaned_data <- mutate(Net_Additions_Regional, date = as.Date(Year,tryFormats = \"%d/%m/%Y\"))  NetAdd_graph <- Cleaned_data %>%   ggplot(aes(x = date, y = Net_Additions, groups = Region)) +   geom_line(aes(colour = Region)) +   dluhc_style()  NetAdd_graph NetAdd_graph <- Cleaned_data %>% ggplot(aes(x = date, y = Net_Additions, groups = Region)) + geom_line() + facet_wrap(~Region,scales=\"fixed\") + dluhc_style(size = 1)  NetAdd_graph"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"dluhctheme-function-2","dir":"Articles","previous_headings":"Make a line chart","what":"dluhctheme function","title":"dluhctheme","text":"also standard function built dluhctheme package allows create highlighted faceted graph one step, like previous functions  function can adapted axis match may want , example wanted: axis go 0-50000 limits = c(0,50000) labels 0, 25000 50000 breaks = c(0,25000,50000) labels commas , using scales package labels = scales::comma y-axis cross x-axis 0 expand = c(0,0)","code":"facet_graph <- facet_highlight_timeseries(.data = Net_Additions_Regional,                                           datecol = Year,                                           ycol = Net_Additions,                                           groupcol = Region,                                           dateformat = \"%d/%m/%Y\")  facet_graph facet_graph +   scale_y_continuous(breaks = c(0,25000,50000),limits = c(0,50000),labels = scales::comma,expand = c(0,0))"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"creating-a-forecast-time-series","dir":"Articles","previous_headings":"Make a line chart","what":"Creating a forecast time series","title":"dluhctheme","text":"Sometimes may want present data graph data recorded data prediction forecast. different ways achieve . example dataset OBR_Forecast data contained dluhctheme package data 30/09/2022 recorded data, afterwards prediction simple method add dotted line vertically graph denote predictions begin .  Another method lines go solid line dashed line. need add new column well duplicated row contains last recorded value.","code":"knitr::kable(head(OBR_Forecast)) #As with the previous examples, the date needs cleaning before running.  Forecast_df <- OBR_Forecast %>%   mutate(date = as.Date(Date,tryFormats = \"%d/%m/%Y\"))  Forecast_df %>%   ggplot(aes(x = date, y=Inflation)) +   geom_line(linewidth = 2,colour=\"blue\") +   geom_vline(xintercept = as.Date(\"2022-10-01\"),linewidth = 1.5,linetype=\"dashed\") +   dluhc_style() Forecast_df_2 <- Forecast_df %>%   mutate(type =ifelse(date <= as.Date(\"2022-09-30\"),\"Actual\",\"Predicted\")) %>%   add_row(Date = \"30/09/2022\",date = as.Date(\"2022-09-30\"),Inflation=9.7,type = \"Predicted\") %>%   arrange(date)  knitr::kable(head(Forecast_df_2)) Forecast_df_2 %>%   ggplot(aes(x = date,y=Inflation,group=type)) +   geom_line(aes(linetype = type), linewidth = 1.2, colour = \"blue\") +   dluhc_style()"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"dluhctheme-function-3","dir":"Articles","previous_headings":"Make a line chart","what":"dluhctheme function","title":"dluhctheme","text":"quite long process, function created : forecast_timeseries()  cutdate first day last recorded value (1st October 2022 30th September 2022) dottedline TRUE/FALSE variable, whether want vertical dotted line cut date label_names names given two lines","code":"forecast_timeseries(.data = OBR_Forecast,                     datecol = Date,                     ycol = Inflation,                     cutdate = \"01/10/2022\",                     dateformat = \"%d/%m/%Y\",                     dottedline = TRUE,                     label_names = c(\"Recorded\",\"Forecast\") )"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"make-a-bar-chart","dir":"Articles","previous_headings":"","what":"Make a bar chart","title":"dluhctheme","text":"","code":"#Prepare data bar_df <- gapminder %>%   filter(year == 2007 & continent == \"Africa\") %>%   arrange(desc(lifeExp)) %>%   head(5)  #Make plot bars <- ggplot(bar_df, aes(x = country, y = lifeExp)) +   geom_bar(stat=\"identity\",             position=\"identity\",             fill=\"#1380A1\") +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   dluhc_style() +   labs(title=\"Reunion is highest\",        subtitle = \"Highest African life expectancy, 2007\")"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"stacked-bar-chart","dir":"Articles","previous_headings":"Make a bar chart","what":"Stacked bar chart","title":"dluhctheme","text":"example shows proportions, might want make stacked bar chart showing number values instead - easy change! value passed position argument determine stacked chart shows proportions actual values. position = \"fill\" draw stacks proportions, position = \"identity\" draw number values.","code":"#prepare data stacked_df <- gapminder %>%    filter(year == 2007) %>%   mutate(lifeExpGrouped = cut(lifeExp,                      breaks = c(0, 50, 65, 80, 90),                     labels = c(\"Under 50\", \"50-65\", \"65-80\", \"80+\"))) %>%   group_by(continent, lifeExpGrouped) %>%   summarise(continentPop = sum(as.numeric(pop)))  #set order of stacks by changing factor levels stacked_df$lifeExpGrouped = factor(stacked_df$lifeExpGrouped, levels = rev(levels(stacked_df$lifeExpGrouped)))  #create plot stacked_bars <- ggplot(data = stacked_df,                         aes(x = continent,                            y = continentPop,                            fill = lifeExpGrouped)) +   geom_bar(stat = \"identity\",             position = \"fill\") +   dluhc_style() +   scale_y_continuous(labels = scales::percent) +   scale_fill_viridis_d(direction = -1) +   geom_hline(yintercept = 0, size = 1, colour = \"#333333\") +   labs(title = \"How life expectancy varies\",        subtitle = \"% of population by life expectancy band, 2007\") +   theme(legend.position = \"top\",          legend.justification = \"left\") +   guides(fill = guide_legend(reverse = TRUE))"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"grouped-bar-chart","dir":"Articles","previous_headings":"Make a bar chart","what":"Grouped bar chart","title":"dluhctheme","text":"Making grouped bar chart similar making bar chart. just need change position = \"identity\" position = \"dodge\", set fill aesthetically instead:","code":"#Prepare data grouped_bar_df <- gapminder %>%   filter(year == 1967 | year == 2007) %>%   select(country, year, lifeExp) %>%   spread(year, lifeExp) %>%   mutate(gap = `2007` - `1967`) %>%   arrange(desc(gap)) %>%   head(5) %>%   gather(key = year,           value = lifeExp,          -country,          -gap)     #Make plot grouped_bars <- ggplot(grouped_bar_df,                         aes(x = country,                             y = lifeExp,                             fill = as.factor(year))) +   geom_bar(stat=\"identity\", position=\"dodge\") +   geom_hline(yintercept = 0, size = 1, colour=\"#333333\") +   dluhc_style() +   scale_fill_manual(values = c(\"#1380A1\", \"#FAAB18\")) +   labs(title=\"We're living longer\",        subtitle = \"Biggest life expectancy rise, 1967-2007\")"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"faceted-bar-charts","dir":"Articles","previous_headings":"Make a bar chart","what":"Faceted bar charts","title":"dluhctheme","text":"Using data stacked bar charts, can see data displayed different faceting.","code":"facet_df <- stacked_df %>%   group_by(continent) %>%   mutate(Proportion = continentPop/sum(continentPop))  facet_bars <- ggplot(data = facet_df,                         aes(x = continent,                            y = Proportion)) +   geom_bar(stat = \"identity\",             position = \"identity\") +   facet_wrap(~lifeExpGrouped)+   dluhc_style(size = 1) +   scale_y_continuous(labels = scales::percent)   facet_bars"},{"path":"https://communitiesuk.github.io/dluhctheme/articles/dluhctheme.html","id":"dluhctheme-function-4","dir":"Articles","previous_headings":"Make a bar chart","what":"dluhctheme function","title":"dluhctheme","text":"function directly creating faceted bar charts straight data. Using Net_Additions_Regional data, faceted line graph example ## Static LA Maps package also allows create maps, currently LA level, using LA_map function. create map data must column LA codes proper ONS format. example data number help buy sales local authority need specify things function: .data name dataframe LA_col column LA code year financial year matches data, choose correct map map_colours two colour vector low high colour scale, standard white union blue save set true save png, MUST specify path filepath part countries countries want displayed E, E+W, GB UK","code":"facet_df <- dluhctheme::Net_Additions_Regional %>%   filter(Region %in% c(\"North East\",\"North West\",\"East Midlands\",\"South East\",\"South West\",\"London\")) %>%   mutate(year = as.Date(Year,tryFormats=\"%d/%m/%Y\")) facet_barchart(.data = facet_df ,                xcol = year,                ycol=Net_Additions,                groupcol = Region                ) knitr::kable(head(Help_to_Buy)) HtB_map <- LA_map(.data = Help_to_Buy        ,LA_col = LA_Code        ,countries = \"E\"        ,variable = Completions        ,map_colours = c(\"#FFFFFF\",\"#012169\")       ,year = \"2021-22\"       ,save = F) #> [1] \"Your original data had 334 rows of data\" #> [1] \"On the map, there were 309 matches, from 309 LAs on the map\""},{"path":"https://communitiesuk.github.io/dluhctheme/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"RAP Working Group. Maintainer.","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Analysis, Direcotrate D (2023). dluhctheme: Creates Consistent ggplot Theme DLUHC Graphs. R package version 0.1.0, https://communitiesuk.github.io/dluhctheme/.","code":"@Manual{,   title = {dluhctheme: Creates a Consistent ggplot Theme for DLUHC Graphs},   author = {{Analysis} and Data Direcotrate},   year = {2023},   note = {R package version 0.1.0},   url = {https://communitiesuk.github.io/dluhctheme/}, }"},{"path":"https://communitiesuk.github.io/dluhctheme/index.html","id":"dluhc-style-for-r-graphics","dir":"","previous_headings":"","what":"Creates a Consistent ggplot Theme for DLUHC Graphs ","title":"Creates a Consistent ggplot Theme for DLUHC Graphs ","text":"Last updated: 2023-02-08","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/index.html","id":"credit-to-bbc-data-team","dir":"","previous_headings":"","what":"Credit to BBC data team","title":"Creates a Consistent ggplot Theme for DLUHC Graphs ","text":"package copied much better BBC bbplot, reapplied work creating graphics DLUHC style. Credit must go BBC data team fantastic product team DLUHC essentially copied use.","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/index.html","id":"install-the-dluhctheme-package","dir":"","previous_headings":"","what":"Install the dluhctheme package","title":"Creates a Consistent ggplot Theme for DLUHC Graphs ","text":"dluhctheme CRAN, install directly Github using devtools. devtools package installed, run first line code well. info dluhctheme check package’s Github repo, details use package functions detailed . downloaded package successfully installed good go create charts.","code":"# install.packages('devtools') devtools::install_github('communitiesuk/dluhctheme')"},{"path":"https://communitiesuk.github.io/dluhctheme/index.html","id":"how-does-the-dluctheme-package-work","dir":"","previous_headings":"","what":"How does the dluctheme package work?","title":"Creates a Consistent ggplot Theme for DLUHC Graphs ","text":"package two types functions; Generic functions: dluhc_style() finalise_plot() functions designed generic themes can added ggplot2 object. edit axes grid lines define text style, set colour lines fill graphs. Specific functions: functions used quick tool instantly creating particular type formatted graph based set shape data inputted. less adaptable, allow user create graph one line code: one_line_timeseries(), multi_line_timeseries(), facet_highlight_timeseries(), LA_map(), facet_barchart(), forecast_timeseries() functions allow create data visualization set theme instantly fixed formatting. Examples functions can found “Reference” tab top page","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/LA_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standard theme map from an sf object — LA_map","title":"Create a standard theme map from an sf object — LA_map","text":"Create standard theme map sf object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/LA_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standard theme map from an sf object — LA_map","text":"","code":"LA_map(   .data,   variable,   LA_col,   map_colours = c(\"#FFFFFF\", \"#012169\"),   year = \"2021-22\",   countries = \"E\",   save = FALSE,   filepath = NULL )"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/LA_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standard theme map from an sf object — LA_map","text":".data sf object data broken local authority. function works data local authority breakdown . variable column .data numeric value mapped LA_col column contains Local Authority code map_colours colour want represent low high values, must vector form year financial year LA codes using relate , given quotations countries countries wish appear map. E, E+W, GB UK England, England+Wales, Great Britain United Kingdom respectively save TRUE/FALSE statement want file exported png file. TRUE, filepath must defined filepath save TRUE, filepath save location png output must form quotations","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/LA_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standard theme map from an sf object — LA_map","text":"ggplot map, png file save TRUE","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/LA_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a standard theme map from an sf object — LA_map","text":"","code":"df <- dluhctheme::Help_to_Buy LA_map(df,variable = Completions,LA_col = LA_Code,year = \"2020-21\",countries = \"E\",save = FALSE) #> [1] \"Your original data had 334 rows of data\" #> [1] \"On the map, there were 314 matches, from 314 LAs on the map\""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/dluhc_style.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot function to create standard background and axis labels for a DLUHC style graph — dluhc_style","title":"ggplot function to create standard background and axis labels for a DLUHC style graph — dluhc_style","text":"ggplot function create standard background axis labels DLUHC style graph","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/dluhc_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot function to create standard background and axis labels for a DLUHC style graph — dluhc_style","text":"","code":"dluhc_style(size = 2)"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/dluhc_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot function to create standard background and axis labels for a DLUHC style graph — dluhc_style","text":"size variable used edit text size. font size, works multiplier font size, default 2","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/dluhc_style.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot function to create standard background and axis labels for a DLUHC style graph — dluhc_style","text":"ggplot object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/dluhc_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggplot function to create standard background and axis labels for a DLUHC style graph — dluhc_style","text":"","code":"df <- dluhctheme::Net_Additions_Regional df$year <- as.numeric(substr(df$Year,7,10)) df <- dplyr::filter(df,Region %in% c(\"North East\",\"North West\",\"South East\")) a <- ggplot2::ggplot(df, ggplot2::aes(x = year, y=Net_Additions)) + ggplot2::geom_line(ggplot2::aes(colour = Region),linewidth = 2) a  a + dluhc_style()"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_barchart.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — facet_barchart","title":"Title — facet_barchart","text":"Title","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_barchart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — facet_barchart","text":"","code":"facet_barchart(.data, xcol, ycol, groupcol, textsize = 1, diffcolours = TRUE)"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_barchart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — facet_barchart","text":".data dataframe containing data, ideally 3 column dataframe one value column two categorical columns xcol column contains variable go x axis column chart ycol column contains value go y axis groupcol column contains categorical variable graphs faceted textsize text size, initially set 1, size ratio normal dluhc_style size 2 diffcolours TRUE/FALSE variable determines want charts colour, graph one six colours DLUHC theme. want neither options, can overridden scale_fill_manual() ggplot function.","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_barchart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — facet_barchart","text":"ggplot object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_barchart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — facet_barchart","text":"","code":"df <- dluhctheme::Net_Additions_Regional df <- dplyr::filter(df,Region %in% c(\"North East\",\"North West\",\"South East\",\"South West\",\"London\", \"East Midlands\")) df$year <- substr(df$Year,7,10) facet_barchart(df,xcol = year,ycol = Net_Additions,groupcol=Region)"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_highlight_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlighted faceted graphs in the dluhc style — facet_highlight_timeseries","title":"Highlighted faceted graphs in the dluhc style — facet_highlight_timeseries","text":"Highlighted faceted graphs dluhc style","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_highlight_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlighted faceted graphs in the dluhc style — facet_highlight_timeseries","text":"","code":"facet_highlight_timeseries(   .data,   datecol,   ycol,   groupcol,   textsize = 1,   dateformat = \"%Y-%m-%d\" )"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_highlight_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlighted faceted graphs in the dluhc style — facet_highlight_timeseries","text":".data dataframe used analysis, ideally 3 column dataframe datecol column name date variables . Date needs one three formats: \"2021-01-23\", \"23/01/2021\" \"21-Jan-2021\" ycol column name numeric values, ensure numeric format groupcol column name split data individual graphs textsize numeric variable text size, isnt actual text size, scale text size facets correctly dateformat format date presented using standard R date format, see detail https://www.statology.org/r-date-format/","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_highlight_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Highlighted faceted graphs in the dluhc style — facet_highlight_timeseries","text":"ggplot object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/facet_highlight_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highlighted faceted graphs in the dluhc style — facet_highlight_timeseries","text":"","code":"df <- dluhctheme::Net_Additions_Regional facet_highlight_timeseries(.data=df,datecol = Year, ycol = Net_Additions, groupcol = Region, dateformat = \"%d/%m/%Y\")"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/finalise_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange alignment and save DLUHC ggplot chart — finalise_plot","title":"Arrange alignment and save DLUHC ggplot chart — finalise_plot","text":"left align source, add DLUHC logo bottom right save specified location.","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/finalise_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange alignment and save DLUHC ggplot chart — finalise_plot","text":"","code":"finalise_plot(   plot_name,   source_name,   save_filepath = file.path(Sys.getenv(\"TMPDIR\"), \"tmp-nc.png\"),   width_pixels = 640,   height_pixels = 450,   logo_image_path = file.path(system.file(\"data\", package = \"dluhctheme\"),     \"DLUHC_Logo.png\"),   footerfontsize = 18,   save = TRUE )"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/finalise_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange alignment and save DLUHC ggplot chart — finalise_plot","text":"plot_name variable name plot created want format save source_name text want come text 'Source:' bottom left hand side side save_filepath Exact filepath want plot saved width_pixels Width pixels want save chart - defaults 640 height_pixels Height pixels want save chart - defaults 450 logo_image_path File path logo image want use right hand side chart, needs PNG file - defaults DLUHC image sits within data folder package footerfontsize Size font used footer","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/finalise_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrange alignment and save DLUHC ggplot chart — finalise_plot","text":"(Invisibly) updated ggplot object.","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/finalise_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange alignment and save DLUHC ggplot chart — finalise_plot","text":"","code":"df <- data.frame(replicate(2,sample(1:19,100,rep=TRUE))) myplot <- ggplot2::ggplot(data = df,ggplot2::aes(x = X1,y=X2)) + ggplot2::geom_point() + dluhctheme::dluhc_style() + ggplot2::scale_y_continuous(expand=c(0,0), limits = c(0,20))  finalise_plot(plot_name = myplot, source = \"Source: The source for my data\", save_filepath = \"filename_that_my_plot_should_be_saved_to-nc.png\", width_pixels = 640, height_pixels = 450, footerfontsize = 18, save = TRUE )"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/forecast_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a single line time series graph in a dluhc theme for a line which has a predicted/forecast value — forecast_timeseries","title":"Create a single line time series graph in a dluhc theme for a line which has a predicted/forecast value — forecast_timeseries","text":"Create single line time series graph dluhc theme line predicted/forecast value","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/forecast_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a single line time series graph in a dluhc theme for a line which has a predicted/forecast value — forecast_timeseries","text":"","code":"forecast_timeseries(   .data,   datecol,   ycol,   cutdate,   dateformat = \"%Y-%m-%d\",   dottedline = TRUE,   label_names = c(\"Recorded\", \"Forecast\") )"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/forecast_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a single line time series graph in a dluhc theme for a line which has a predicted/forecast value — forecast_timeseries","text":".data dataframe long format 2 columns necesarry: Date value datecol column name contains date value widely used date format ycol column name contains values cutdate date predicted values begin dateformat format date presented using standard R date format, see detail https://www.statology.org/r-date-format/ dottedline TRUE/FALSE statement decide want vertical dotted line graph split prediction recorded values label_names vector containing 2 words want label lines, default c(\"Recorded\", \"Forecast\")","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/forecast_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a single line time series graph in a dluhc theme for a line which has a predicted/forecast value — forecast_timeseries","text":"ggplot2 object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/forecast_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a single line time series graph in a dluhc theme for a line which has a predicted/forecast value — forecast_timeseries","text":"","code":"df <- dluhctheme::OBR_Forecast forecast_timeseries(df,Date,ycol=Inflation,cutdate = \"01/10/2022\",dateformat = \"%d/%m/%Y\", label_names = c(\"Actual\",\"Predicted\"))"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/multi_line_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a time series with more than one line in a DLUHC style — multi_line_timeseries","title":"Create a time series with more than one line in a DLUHC style — multi_line_timeseries","text":"Create time series one line DLUHC style","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/multi_line_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a time series with more than one line in a DLUHC style — multi_line_timeseries","text":"","code":"multi_line_timeseries(   .data,   datecol,   ycol,   groupcol,   dateformat = \"%Y-%m-%d\" )"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/multi_line_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a time series with more than one line in a DLUHC style — multi_line_timeseries","text":".data dataframe data long format one column date one column variable value datecol column name dataframe contains date variable ycol column name dataframe contains value groupcol column name contains grouping variable (country, region type)","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/multi_line_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a time series with more than one line in a DLUHC style — multi_line_timeseries","text":"ggplot2 object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/multi_line_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a time series with more than one line in a DLUHC style — multi_line_timeseries","text":"","code":"df <- dluhctheme::Social_Housing_Sales  multi_line_timeseries(.data=df,datecol = year, ycol = count, groupcol = type, dateformat = \"%d/%m/%Y\")"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/one_line_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a single line time series graph in a dluhc theme — one_line_timeseries","title":"Create a single line time series graph in a dluhc theme — one_line_timeseries","text":"Create single line time series graph dluhc theme","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/one_line_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a single line time series graph in a dluhc theme — one_line_timeseries","text":"","code":"one_line_timeseries(.data, datecol, ycol, dateformat = \"%Y-%m-%d\")"},{"path":"https://communitiesuk.github.io/dluhctheme/reference/one_line_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a single line time series graph in a dluhc theme — one_line_timeseries","text":".data dataframe long format 2 columns necessary: Date value datecol column name contains date value widely used date format ycol column name contains values dateformat format date presented using standard R date format, see detail https://www.statology.org/r-date-format/","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/one_line_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a single line time series graph in a dluhc theme — one_line_timeseries","text":"ggplot object","code":""},{"path":"https://communitiesuk.github.io/dluhctheme/reference/one_line_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a single line time series graph in a dluhc theme — one_line_timeseries","text":"","code":"df <- dluhctheme::Social_Housing_Sales df <- dplyr::filter(df,type == \"Right to Buy\")  one_line_timeseries(.data=df,datecol = year, ycol = count, dateformat = \"%d/%m/%Y\")"}]
